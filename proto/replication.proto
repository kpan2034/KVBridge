syntax = "proto3";

package kvbridge;

option go_package = "./replication";

service ReplicationService {
  // replicate a single op, ideally it should be a single
  // function that takes in the op + args the client recieved but for now
  // just a simple replicate write function that always replicate
  rpc ReplicateWrite(ReplicateWriteRequest) returns (ReplicateWriteResponse);
  rpc GetKey(GetKeyRequest) returns (GetKeyResponse);

  rpc GetMerkleTree(MerkleTreeRequest) returns (MerkleTreeResponse);
}

message ReplicateWriteRequest {
  // bool deferred = 1; // can the write be deferred? used when ack is not
  // needed AFTER write is made durable
  // In this case the client can get away with writing this value only to the
  // WAL and only syncing periodically
  uint32 id = 1;
  bytes key = 2;
  bytes value = 3;
}

message ReplicateWriteResponse {
  oneof resp {
    bool ok = 1;
    bytes value = 2;
  }
}

message GetKeyRequest { bytes key = 1; }

message GetKeyResponse {
  bool ok = 1;
  bytes value = 2;
}

// Merkle tree
message MerkleTreeRequest {
  uint32 keyRangeLowerBound = 1;
  uint32 keyRangeUpperBound = 2;
}

message MerkleTreeResponse { repeated uint32 data = 1; }
